}
}
dir.create(file.path(dest, gsub(" ", "_", title)), showWarnings = FALSE)
if (any(!is.na(data)) && !incl.data) {
for (n in 1:length(data)) file.copy(data[[n]], file.path(dest,
gsub(" ", "_", title)), overwrite = overwrite)
}
if (any(is.na(data))) {
center <- c(0, 0)
zoom <- 2
}
filePath <- file.path(dest, gsub(" ", "_", title), paste0(gsub(" ",
"_", title), ".html"))
leafletInt(data, path = filePath, title, size, base.map,
center, zoom, style, popup, incl.data)
message("\nYour leaflet map has been saved under ", filePath)
invisible(filePath)
}
library(leafletR)
llr2 <- function (data, dest, title, size, base.map = "osm", center,
zoom, style, popup, incl.data = FALSE, overwrite = TRUE)
{
if (missing(data))
data <- NA
if (length(data) > 1)
for (n in 1:length(data)) {
#          if (!is.na(data[[n]]))
#              if (tolower(tail(strsplit(tail(strsplit(data[[n]],
#                "/")[[1]], 1), "[.]")[[1]], 1)) != "geojson")
#                stop("'data' requires GeoJSON files (file extension should be 'geojson')")
suppressWarnings(if (require(RJSONIO, quietly = TRUE))
if (!isValidJSON(data[[n]]))
stop("'data' is not a valid JSON file"))
}
else {
#      if (!is.na(data)) {
#          if (tolower(tail(strsplit(tail(strsplit(data, "/")[[1]],
#              1), "[.]")[[1]], 1)) != "geojson")
#              stop("'data' requires GeoJSON files (file extension should be 'geojson')")
#          suppressWarnings(if (require(RJSONIO, quietly = TRUE))
if (!isValidJSON(data))
stop("'data' is not a valid JSON file"))
}
}
if (missing(dest))
dest <- getwd()
dest <- gsub("\\\\", "/", dest)
if (missing(title)) {
if (any(is.na(data)))
title <- "map"
else {
if (length(data) == 1)
title <- gsub("_", " ", paste(head(strsplit(tail(strsplit(data,
"/")[[1]], 1), "[.]")[[1]], -1), collapse = "_"))
else title <- "map"
}
}
if (missing(size))
size <- NA
bm <- c("osm", "tls", "mqosm", "mqsat", "water", "toner")
base.map <- bm[pmatch(base.map, bm)]
if (any(is.na(base.map)))
stop("Invalid base.map")
if (missing(center))
center <- NA
if (missing(zoom))
zoom <- NA
if (missing(style))
style <- NA
if (missing(popup))
popup <- NA
if (any(!is.na(style))) {
if (class(style) == "list") {
for (i in 1:length(style)) if (class(style[[i]]) !=
"leafletr.style")
stop("At least one style object not recognized")
}
else if (class(style) != "leafletr.style")
stop("Style object not recognized")
}
if (length(data) > 1 && !is.na(style))
if (length(style) < length(data) || !is.list(style))
stop("Number of styles must correspond to number of data files")
if (file.exists(file.path(dest, gsub(" ", "_", title))) &&
!overwrite)
stop("Abort - file already exists")
if (!any(is.na(popup))) {
if (is.list(popup)) {
for (n in 1:length(popup)) if (length(popup[[n]]) ==
1)
if (popup[[n]] == "*")
popup[[n]] <- getProperties(data[[n]], FALSE)
}
else {
if (length(popup) == 1)
if (popup == "*")
popup <- getProperties(data[[1]], FALSE)
}
}
dir.create(file.path(dest, gsub(" ", "_", title)), showWarnings = FALSE)
if (any(!is.na(data)) && !incl.data) {
for (n in 1:length(data)) file.copy(data[[n]], file.path(dest,
gsub(" ", "_", title)), overwrite = overwrite)
}
if (any(is.na(data))) {
center <- c(0, 0)
zoom <- 2
}
filePath <- file.path(dest, gsub(" ", "_", title), paste0(gsub(" ",
"_", title), ".html"))
leafletInt(data, path = filePath, title, size, base.map,
center, zoom, style, popup, incl.data)
message("\nYour leaflet map has been saved under ", filePath)
invisible(filePath)
}
llr2 <- function (data, dest, title, size, base.map = "osm", center,
zoom, style, popup, incl.data = FALSE, overwrite = TRUE)
{
if (missing(data))
data <- NA
if (length(data) > 1)
for (n in 1:length(data)) {
#          if (!is.na(data[[n]]))
#              if (tolower(tail(strsplit(tail(strsplit(data[[n]],
#                "/")[[1]], 1), "[.]")[[1]], 1)) != "geojson")
#                stop("'data' requires GeoJSON files (file extension should be 'geojson')")
suppressWarnings(if (require(RJSONIO, quietly = TRUE))
if (!isValidJSON(data[[n]]))
stop("'data' is not a valid JSON file") #)
}
else {
#      if (!is.na(data)) {
#          if (tolower(tail(strsplit(tail(strsplit(data, "/")[[1]],
#              1), "[.]")[[1]], 1)) != "geojson")
#              stop("'data' requires GeoJSON files (file extension should be 'geojson')")
#          suppressWarnings(if (require(RJSONIO, quietly = TRUE))
if (!isValidJSON(data))
stop("'data' is not a valid JSON file"))
}
}
if (missing(dest))
dest <- getwd()
dest <- gsub("\\\\", "/", dest)
if (missing(title)) {
if (any(is.na(data)))
title <- "map"
else {
if (length(data) == 1)
title <- gsub("_", " ", paste(head(strsplit(tail(strsplit(data,
"/")[[1]], 1), "[.]")[[1]], -1), collapse = "_"))
else title <- "map"
}
}
if (missing(size))
size <- NA
bm <- c("osm", "tls", "mqosm", "mqsat", "water", "toner")
base.map <- bm[pmatch(base.map, bm)]
if (any(is.na(base.map)))
stop("Invalid base.map")
if (missing(center))
center <- NA
if (missing(zoom))
zoom <- NA
if (missing(style))
style <- NA
if (missing(popup))
popup <- NA
if (any(!is.na(style))) {
if (class(style) == "list") {
for (i in 1:length(style)) if (class(style[[i]]) !=
"leafletr.style")
stop("At least one style object not recognized")
}
else if (class(style) != "leafletr.style")
stop("Style object not recognized")
}
if (length(data) > 1 && !is.na(style))
if (length(style) < length(data) || !is.list(style))
stop("Number of styles must correspond to number of data files")
if (file.exists(file.path(dest, gsub(" ", "_", title))) &&
!overwrite)
stop("Abort - file already exists")
if (!any(is.na(popup))) {
if (is.list(popup)) {
for (n in 1:length(popup)) if (length(popup[[n]]) ==
1)
if (popup[[n]] == "*")
popup[[n]] <- getProperties(data[[n]], FALSE)
}
else {
if (length(popup) == 1)
if (popup == "*")
popup <- getProperties(data[[1]], FALSE)
}
}
dir.create(file.path(dest, gsub(" ", "_", title)), showWarnings = FALSE)
if (any(!is.na(data)) && !incl.data) {
for (n in 1:length(data)) file.copy(data[[n]], file.path(dest,
gsub(" ", "_", title)), overwrite = overwrite)
}
if (any(is.na(data))) {
center <- c(0, 0)
zoom <- 2
}
filePath <- file.path(dest, gsub(" ", "_", title), paste0(gsub(" ",
"_", title), ".html"))
leafletInt(data, path = filePath, title, size, base.map,
center, zoom, style, popup, incl.data)
message("\nYour leaflet map has been saved under ", filePath)
invisible(filePath)
}
leaflet
llr2 <- function (data, dest, title, size, base.map = "osm", center,
zoom, style, popup, incl.data = FALSE, overwrite = TRUE)
{
if (missing(dest))
dest <- getwd()
dest <- gsub("\\\\", "/", dest)
if (missing(title)) {
if (any(is.na(data)))
title <- "map"
else {
if (length(data) == 1)
title <- gsub("_", " ", paste(head(strsplit(tail(strsplit(data,
"/")[[1]], 1), "[.]")[[1]], -1), collapse = "_"))
else title <- "map"
}
}
if (missing(size))
size <- NA
bm <- c("osm", "tls", "mqosm", "mqsat", "water", "toner")
base.map <- bm[pmatch(base.map, bm)]
if (any(is.na(base.map)))
stop("Invalid base.map")
if (missing(center))
center <- NA
if (missing(zoom))
zoom <- NA
if (missing(style))
style <- NA
if (missing(popup))
popup <- NA
if (any(!is.na(style))) {
if (class(style) == "list") {
for (i in 1:length(style)) if (class(style[[i]]) !=
"leafletr.style")
stop("At least one style object not recognized")
}
else if (class(style) != "leafletr.style")
stop("Style object not recognized")
}
if (length(data) > 1 && !is.na(style))
if (length(style) < length(data) || !is.list(style))
stop("Number of styles must correspond to number of data files")
if (file.exists(file.path(dest, gsub(" ", "_", title))) &&
!overwrite)
stop("Abort - file already exists")
if (!any(is.na(popup))) {
if (is.list(popup)) {
for (n in 1:length(popup)) if (length(popup[[n]]) ==
1)
if (popup[[n]] == "*")
popup[[n]] <- getProperties(data[[n]], FALSE)
}
else {
if (length(popup) == 1)
if (popup == "*")
popup <- getProperties(data[[1]], FALSE)
}
}
dir.create(file.path(dest, gsub(" ", "_", title)), showWarnings = FALSE)
if (any(!is.na(data)) && !incl.data) {
for (n in 1:length(data)) file.copy(data[[n]], file.path(dest,
gsub(" ", "_", title)), overwrite = overwrite)
}
if (any(is.na(data))) {
center <- c(0, 0)
zoom <- 2
}
filePath <- file.path(dest, gsub(" ", "_", title), paste0(gsub(" ",
"_", title), ".html"))
leafletInt(data, path = filePath, title, size, base.map,
center, zoom, style, popup, incl.data)
message("\nYour leaflet map has been saved under ", filePath)
invisible(filePath)
}
llr2(data)
library(leafletR)
leafletR(data)
leaflet(data)
data <- download.file(url = "http://node-128.dev.socialhistoryservices.org/api/maps?year=1812&format=geojson",
destfile = "./nld_1812.geojson")
leafletR(data)
leaflet(data)
data <- download.file(url = "http://node-128.dev.socialhistoryservices.org/api/maps?year=1812&format=geojson",
destfile = "nld_1812.geojson")
ls
dir()
leaflet(data)
leaflet(nld_1812.geojson)
leaflet("./nld_1812.geojson")
map <- leaflet("./nld_1812.geojson")
browseUrl(map)
library(rCurl)
library(RCurl)
browseUrl(map)
library(rMaps)
browseUrl(map)
map
browseURL("http://www.r-project.org")
browseURL(map)
library(leafletR)
nlbrowse <- function(year, name){
ply <- download.file(url = paste0(paste0("http://node-128.dev.socialhistoryservices.org/api/maps?year=",
year), "&format=geojson"),
destfile = paste0(name, ".geojson"))
geomap <- leaflet(paste0("./",name))
browseURL(map)
}
nlbrowse <- function(year, name){
ply <- download.file(url = paste0(paste0("http://node-128.dev.socialhistoryservices.org/api/maps?year=",
year), "&format=geojson"),
destfile = paste0(name, ".geojson"))
geomap <- leaflet(paste0("./",paste0(name, ".geojson"))
browseURL(map)
}
nlbrowse(1812, "nld2_1812")
nlbrowse <- function(year, name){
ply <- download.file(url = paste0(paste0("http://node-128.dev.socialhistoryservices.org/api/maps?year=",
year), "&format=geojson"),
destfile = paste0(name, ".geojson"))
geomap <- leaflet(paste0("./",paste0(name, ".geojson"))
browseURL(geomap)
}
nlbrowse <- function(year, name){
ply <- download.file(url = paste0(paste0("http://node-128.dev.socialhistoryservices.org/api/maps?year=",
year), "&format=geojson"),
destfile = paste0(name, ".geojson"))
geomap <- leaflet(paste0("./", paste0(name, ".geojson")))
browseURL(geomap)
}
nlbrowse(1812, "nld2_1812")
view.nlg <- function(year, name){
ply <- download.file(url = paste0(paste0("http://node-128.dev.socialhistoryservices.org/api/maps?year=",
year), "&format=geojson"),
destfile = paste0(name, ".geojson"))
geomap <- leaflet(paste0("./", paste0(name, ".geojson")),
title = paste0("Netherlands - ", year))
browseURL(geomap)
}
view.nlg(1812, "nld2_1812")
library(leafletR)
view.nlg <- function(year, name){
ply <- download.file(url = paste0(paste0("http://node-128.dev.socialhistoryservices.org/api/maps?year=",
year), "&format=geojson"),
destfile = paste0(name, ".geojson"))
geomap <- leaflet(paste0("./", paste0(name, ".geojson")),
title = paste0("Netherlands - ", year))
browseURL(geomap)
}
view.nlg(year = 1812, name = "its_working")
view.nlg <- function(year, name){
ply <- download.file(url = paste0(paste0("http://node-128.dev.socialhistoryservices.org/api/maps?year=",
year), "&format=geojson"),
destfile = paste0(name, ".geojson"))
geomap <- leaflet(paste0("./", paste0(name, ".geojson")),
title = paste0("Netherlands - ", year))
browseURL(geomap)
}
view.nlg(year = 1842, name = "its_working")
view.nlg(year = 1972, name = "its_working")
if(!require(devtools)) install.packages("devtools")
devtools::install_github("leafletR", "chgrl", "topo")
view.nlt <- function(year, name){
ply <- download.file(url = paste0("http://node-128.dev.socialhistoryservices.org/api/maps?year=",
year),
destfile = paste0(name, ".json"))
geomap <- leaflet(paste0("./", paste0(name, ".json")),
title = paste0("Netherlands - ", year))
browseURL(geomap)
}
view.nlt(1812, nld_topo_1812)
view.nlt <- function(year, name){
ply <- download.file(url = paste0("http://node-128.dev.socialhistoryservices.org/api/maps?year=",
year),
destfile = paste0(name, ".json"))
topoomap <- leaflet(paste0("./", paste0(name, ".json")),
title = paste0("Netherlands - ", year))
browseURL(geomap)
}
view.nlt <- function(year, name){
ply <- download.file(url = paste0("http://node-128.dev.socialhistoryservices.org/api/maps?year=",
year),
destfile = paste0(name, ".json"))
topoomap <- leaflet(paste0("./", paste0(name, ".json")),
title = paste0("Netherlands - ", year))
browseURL(topomap)
}
view.nlt(1812, nld_topo_1812)
view.nlg <- function(year, name){
ply <- download.file(url = paste0(paste0("http://node-128.dev.socialhistoryservices.org/api/maps?year=",
year), "&format=geojson"),
destfile = paste0(name, ".geojson"))
geomap <- leaflet(paste0("./", paste0(name, ".geojson")),
title = paste0("Netherlands - ", year))
browseURL(geomap)
}
# to run script use something like:
# view.nlg(year = 1842, name = "its_working")
view.nlg(1975,)
view.nlt(1812, "nld_topo_1812")
view.nlg <- function(year, name){
ply <- download.file(url = paste0(paste0("http://node-128.dev.socialhistoryservices.org/api/maps?year=",
year), "&format=geojson"),
destfile = paste0(name, ".geojson"))
geomap <- leaflet(paste0("./", paste0(name, ".geojson")),
title = paste0("Netherlands - ", year))
browseURL(geomap)
}
# to run script use something like:
# view.nlg(year = 1842, name = "its_working")
view.nlg(1975, "testmap")
library(leafletR)
view.nlt <- function(year, name){
ply <- download.file(url = paste0("http://node-128.dev.socialhistoryservices.org/api/maps?year=",
year),
destfile = paste0(name, ".json"))
topoomap <- leaflet(paste0("./", paste0(name, ".json")),
title = paste0("Netherlands - ", year))
browseURL(topomap)
}
view.nlt(1812, "nld_topo_1812")
view.nlt <- function(year, name){
ply <- download.file(url = paste0("http://node-128.dev.socialhistoryservices.org/api/maps?year=",
year),
destfile = paste0(name, ".json"))
topomap <- leaflet(paste0("./", paste0(name, ".json")),
title = paste0("Netherlands - ", year))
browseURL(topomap)
}
view.nlt(1812, "nld_topo_1812")
sessionInfo()
options(java.parameters = "-Xmx6000m")
library(rJava)
# packages
library(RCurl)
library(lar)
library(xlsx)
# Change directory to your local copy of labrel github
setwd("/Users/richard/Documents/github/labrel/")
# Change directory to your download directory
download <- "/Users/richard/Downloads/labrel/"
giturl <- "https://raw.githubusercontent.com/rlzijdeman/labrel/master/data/"
russia.1500       <- read.lar(paste0(download, "russia_1500.xlsx"))
russia.1650       <- read.lar(paste0(download, "russia_1650.xlsx"))
argentina.1900    <- read.lar(paste0(download, "argentina_1900.xlsx"))
argentina.2000    <- read.lar(paste0(download, "argentina_2000.xlsx"))
bolivia.1900      <- read.lar(paste0(download, "bolivia_1900.xlsx"))
bolivia.2000      <- read.lar(paste0(download, "bolivia_2000.xlsx"))
brazil.1650       <- read.lar(paste0(download, "brazil_1650.xlsx"))
brazil.1800       <- read.lar(paste0(download, "brazil_1800.xlsx"))
ceylon.1800       <- read.lar(paste0(download, "ceylon_1800.xlsx"))
china.1500        <- read.lar(paste0(download, "china_1500.xlsx"))
china.1800        <- read.lar(paste0(download, "china_1800.xlsx"))
italy.1900        <- read.lar(paste0(download, "italy_1900.xlsx"))
italy.2001        <- read.lar(paste0(download, "italy_2001.xlsx"))
japan.1800        <- read.lar(paste0(download, "japan_1800.xlsx"))
japan.2000        <- read.lar(paste0(download, "japan_2000.xlsx"))
java.1650         <- read.lar(paste0(download, "java_1650.xlsx"))
java.1800         <- read.lar(paste0(download, "java_1800.xlsx"))
java.1900         <- read.lar(paste0(download, "java_1900.xlsx"))
netherlands.1900  <- read.lar(paste0(download, "netherlands_1900.xlsx"))
netherlands.2000  <- read.lar(paste0(download, "netherlands_2000.xlsx"))
russia.1800       <- read.lar(paste0(download, "russia_1800.xlsx"))
russia.1900       <- read.lar(paste0(download, "russia_1900.xlsx"))
russia.2000       <- read.lar(paste0(download, "russia_2000.xlsx"))
southafrica.2000  <- read.lar(paste0(download, "southafrica_2000.xlsx"))
spain.1800        <- read.lar(paste0(download, "spain_1800.xlsx"))
spain.1900        <- read.lar(paste0(download, "spain_1900.xlsx"))
spain.2000        <- read.lar(paste0(download, "spain_2000.xlsx"))
taiwan.1500       <- read.lar(paste0(download, "taiwan_1500.xlsx"))
taiwan.1650       <- read.lar(paste0(download, "taiwan_1650.xlsx"))
taiwan.1800       <- read.lar(paste0(download, "taiwan_1800.xlsx"))
unitedstates.1800 <- read.lar(paste0(download, "unitedstates_1800.xlsx"))
venice.1500       <- read.lar(paste0(download, "venice_1500.xlsx"))
venice.1650       <- read.lar(paste0(download, "venice_1650.xlsx"))
venice.1800       <- read.lar(paste0(download, "venice_1800.xlsx"))
data.names <- c("argentina.1900", "argentina.2000", "bolivia.1900",
"bolivia.2000", "brazil.1650", "brazil.1800", "ceylon.1800",
"china.1500", "china.1800", "italy.1900", "italy.2001",
"japan.1800", "japan.2000", "java.1650", "java.1800",
"java.1900", "netherlands.1900", "netherlands.2000",
"russia.1500", "russia.1650", "russia.1800", "russia.1900",
"russia.2000", "southafrica.2000", "spain.1800", "spain.1900",
"spain.2000", "taiwan.1500", "taiwan.1650", "taiwan.1800",
"unitedstates.1800", "venice.1500", "venice.1650",
"venice.1800")
data.list <- lapply(data.names, get)
labrel.df <- do.call(rbind, data.list)
write.csv(labrel.df, file = "./data/git_combine_data.csv")
save(labrel.df, file = "./data/git_combine_data.Rda")
names(labrel.df)
labrel.df.sub <- subset(labrel.df,
select = "total","percent","area.region.country",
"country.code","ctry.time","year",
"txt1.1","txt1.2","txt1.3.ext","txt2.1","txt3.1",
"sortID","bmyear","sortID2")
labrel.df.sub <- subset(labrel.df,
select = c("total","percent","area.region.country",
"country.code","ctry.time","year",
"txt1.1","txt1.2","txt1.3.ext","txt2.1","txt3.1",
"sortID","bmyear","sortID2"))
